// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package services

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 用户爱好
type UserLoginResponse_Hobby int32

const (
	UserLoginResponse_music      UserLoginResponse_Hobby = 0
	UserLoginResponse_basketball UserLoginResponse_Hobby = 1
	UserLoginResponse_tour       UserLoginResponse_Hobby = 2
)

var UserLoginResponse_Hobby_name = map[int32]string{
	0: "music",
	1: "basketball",
	2: "tour",
}

var UserLoginResponse_Hobby_value = map[string]int32{
	"music":      0,
	"basketball": 1,
	"tour":       2,
}

func (x UserLoginResponse_Hobby) String() string {
	return proto.EnumName(UserLoginResponse_Hobby_name, int32(x))
}

func (UserLoginResponse_Hobby) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1, 0}
}

// 手机类型枚举
type UserLoginResponse_PhoneType int32

const (
	UserLoginResponse_mobile UserLoginResponse_PhoneType = 0
	UserLoginResponse_home   UserLoginResponse_PhoneType = 1
	UserLoginResponse_work   UserLoginResponse_PhoneType = 2
)

var UserLoginResponse_PhoneType_name = map[int32]string{
	0: "mobile",
	1: "home",
	2: "work",
}

var UserLoginResponse_PhoneType_value = map[string]int32{
	"mobile": 0,
	"home":   1,
	"work":   2,
}

func (x UserLoginResponse_PhoneType) String() string {
	return proto.EnumName(UserLoginResponse_PhoneType_name, int32(x))
}

func (UserLoginResponse_PhoneType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1, 1}
}

// 用户登录请求
type UserLoginRequest struct {
	UserName             string   `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	UserPwd              string   `protobuf:"bytes,2,opt,name=user_pwd,json=userPwd,proto3" json:"user_pwd,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserLoginRequest) Reset()         { *m = UserLoginRequest{} }
func (m *UserLoginRequest) String() string { return proto.CompactTextString(m) }
func (*UserLoginRequest) ProtoMessage()    {}
func (*UserLoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *UserLoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserLoginRequest.Unmarshal(m, b)
}
func (m *UserLoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserLoginRequest.Marshal(b, m, deterministic)
}
func (m *UserLoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserLoginRequest.Merge(m, src)
}
func (m *UserLoginRequest) XXX_Size() int {
	return xxx_messageInfo_UserLoginRequest.Size(m)
}
func (m *UserLoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserLoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserLoginRequest proto.InternalMessageInfo

func (m *UserLoginRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UserLoginRequest) GetUserPwd() string {
	if m != nil {
		return m.UserPwd
	}
	return ""
}

// 用户登录响应
type UserLoginResponse struct {
	UserId               int64                            `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName             string                           `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	UserNickname         string                           `protobuf:"bytes,3,opt,name=user_nickname,json=userNickname,proto3" json:"user_nickname,omitempty"`
	UserCountry          string                           `protobuf:"bytes,4,opt,name=user_country,json=userCountry,proto3" json:"user_country,omitempty"`
	UserGender           int32                            `protobuf:"varint,5,opt,name=user_gender,json=userGender,proto3" json:"user_gender,omitempty"`
	UserCredits          float64                          `protobuf:"fixed64,6,opt,name=user_credits,json=userCredits,proto3" json:"user_credits,omitempty"`
	IsAdmin              bool                             `protobuf:"varint,7,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
	AuthCode             []byte                           `protobuf:"bytes,8,opt,name=auth_code,json=authCode,proto3" json:"auth_code,omitempty"`
	UserBalance          float32                          `protobuf:"fixed32,9,opt,name=user_balance,json=userBalance,proto3" json:"user_balance,omitempty"`
	UserHobby            UserLoginResponse_Hobby          `protobuf:"varint,10,opt,name=user_hobby,json=userHobby,proto3,enum=services.UserLoginResponse_Hobby" json:"user_hobby,omitempty"`
	Phones               []*UserLoginResponse_PhoneNumber `protobuf:"bytes,11,rep,name=phones,proto3" json:"phones,omitempty"`
	LoginStatus          LoginStatus                      `protobuf:"varint,12,opt,name=login_status,json=loginStatus,proto3,enum=services.LoginStatus" json:"login_status,omitempty"`
	LastUpdateDate       *timestamp.Timestamp             `protobuf:"bytes,17,opt,name=last_update_date,json=lastUpdateDate,proto3" json:"last_update_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *UserLoginResponse) Reset()         { *m = UserLoginResponse{} }
func (m *UserLoginResponse) String() string { return proto.CompactTextString(m) }
func (*UserLoginResponse) ProtoMessage()    {}
func (*UserLoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *UserLoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserLoginResponse.Unmarshal(m, b)
}
func (m *UserLoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserLoginResponse.Marshal(b, m, deterministic)
}
func (m *UserLoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserLoginResponse.Merge(m, src)
}
func (m *UserLoginResponse) XXX_Size() int {
	return xxx_messageInfo_UserLoginResponse.Size(m)
}
func (m *UserLoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserLoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserLoginResponse proto.InternalMessageInfo

func (m *UserLoginResponse) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *UserLoginResponse) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UserLoginResponse) GetUserNickname() string {
	if m != nil {
		return m.UserNickname
	}
	return ""
}

func (m *UserLoginResponse) GetUserCountry() string {
	if m != nil {
		return m.UserCountry
	}
	return ""
}

func (m *UserLoginResponse) GetUserGender() int32 {
	if m != nil {
		return m.UserGender
	}
	return 0
}

func (m *UserLoginResponse) GetUserCredits() float64 {
	if m != nil {
		return m.UserCredits
	}
	return 0
}

func (m *UserLoginResponse) GetIsAdmin() bool {
	if m != nil {
		return m.IsAdmin
	}
	return false
}

func (m *UserLoginResponse) GetAuthCode() []byte {
	if m != nil {
		return m.AuthCode
	}
	return nil
}

func (m *UserLoginResponse) GetUserBalance() float32 {
	if m != nil {
		return m.UserBalance
	}
	return 0
}

func (m *UserLoginResponse) GetUserHobby() UserLoginResponse_Hobby {
	if m != nil {
		return m.UserHobby
	}
	return UserLoginResponse_music
}

func (m *UserLoginResponse) GetPhones() []*UserLoginResponse_PhoneNumber {
	if m != nil {
		return m.Phones
	}
	return nil
}

func (m *UserLoginResponse) GetLoginStatus() LoginStatus {
	if m != nil {
		return m.LoginStatus
	}
	return LoginStatus_success
}

func (m *UserLoginResponse) GetLastUpdateDate() *timestamp.Timestamp {
	if m != nil {
		return m.LastUpdateDate
	}
	return nil
}

// 手机号码类型
type UserLoginResponse_PhoneNumber struct {
	Number               string                      `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	Type                 UserLoginResponse_PhoneType `protobuf:"varint,2,opt,name=type,proto3,enum=services.UserLoginResponse_PhoneType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *UserLoginResponse_PhoneNumber) Reset()         { *m = UserLoginResponse_PhoneNumber{} }
func (m *UserLoginResponse_PhoneNumber) String() string { return proto.CompactTextString(m) }
func (*UserLoginResponse_PhoneNumber) ProtoMessage()    {}
func (*UserLoginResponse_PhoneNumber) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1, 0}
}

func (m *UserLoginResponse_PhoneNumber) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserLoginResponse_PhoneNumber.Unmarshal(m, b)
}
func (m *UserLoginResponse_PhoneNumber) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserLoginResponse_PhoneNumber.Marshal(b, m, deterministic)
}
func (m *UserLoginResponse_PhoneNumber) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserLoginResponse_PhoneNumber.Merge(m, src)
}
func (m *UserLoginResponse_PhoneNumber) XXX_Size() int {
	return xxx_messageInfo_UserLoginResponse_PhoneNumber.Size(m)
}
func (m *UserLoginResponse_PhoneNumber) XXX_DiscardUnknown() {
	xxx_messageInfo_UserLoginResponse_PhoneNumber.DiscardUnknown(m)
}

var xxx_messageInfo_UserLoginResponse_PhoneNumber proto.InternalMessageInfo

func (m *UserLoginResponse_PhoneNumber) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *UserLoginResponse_PhoneNumber) GetType() UserLoginResponse_PhoneType {
	if m != nil {
		return m.Type
	}
	return UserLoginResponse_mobile
}

func init() {
	proto.RegisterEnum("services.UserLoginResponse_Hobby", UserLoginResponse_Hobby_name, UserLoginResponse_Hobby_value)
	proto.RegisterEnum("services.UserLoginResponse_PhoneType", UserLoginResponse_PhoneType_name, UserLoginResponse_PhoneType_value)
	proto.RegisterType((*UserLoginRequest)(nil), "services.UserLoginRequest")
	proto.RegisterType((*UserLoginResponse)(nil), "services.UserLoginResponse")
	proto.RegisterType((*UserLoginResponse_PhoneNumber)(nil), "services.UserLoginResponse.PhoneNumber")
}

func init() {
	proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf)
}

var fileDescriptor_116e343673f7ffaf = []byte{
	// 600 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x53, 0x5f, 0x6f, 0xd3, 0x3e,
	0x14, 0x9d, 0xbb, 0xb5, 0x6b, 0x6f, 0xfa, 0xab, 0x32, 0xeb, 0x07, 0x84, 0xee, 0x61, 0x59, 0x11,
	0x22, 0x12, 0x28, 0x9b, 0xca, 0x0b, 0x3c, 0x31, 0xd8, 0x24, 0xfe, 0x08, 0xa6, 0x91, 0x6d, 0xcf,
	0xc1, 0x49, 0x2e, 0xad, 0xb5, 0x24, 0x0e, 0xb1, 0xc3, 0xd4, 0xef, 0xc7, 0x07, 0xe2, 0x23, 0x20,
	0xdb, 0xe9, 0x3a, 0xfe, 0x68, 0x48, 0xec, 0x25, 0xf2, 0x39, 0x3e, 0xf7, 0xf8, 0xf8, 0xfa, 0x06,
	0xa0, 0x91, 0x58, 0x87, 0x55, 0x2d, 0x94, 0xa0, 0x7d, 0x89, 0xf5, 0x57, 0x9e, 0xa2, 0x1c, 0xef,
	0xcc, 0x84, 0x98, 0xe5, 0xb8, 0x67, 0xf8, 0xa4, 0xf9, 0xbc, 0xa7, 0x78, 0x81, 0x52, 0xb1, 0xa2,
	0xb2, 0xd2, 0xf1, 0x30, 0x15, 0x45, 0x21, 0x4a, 0x8b, 0x26, 0xef, 0xc0, 0x3d, 0x97, 0x58, 0xbf,
	0x17, 0x33, 0x5e, 0x46, 0xf8, 0xa5, 0x41, 0xa9, 0xe8, 0x36, 0x0c, 0xb4, 0x75, 0x5c, 0xb2, 0x02,
	0x3d, 0xe2, 0x93, 0x60, 0x10, 0xf5, 0x35, 0x71, 0xcc, 0x0a, 0xa4, 0xf7, 0xc1, 0xac, 0xe3, 0xea,
	0x32, 0xf3, 0x3a, 0x66, 0x6f, 0x53, 0xe3, 0x93, 0xcb, 0x6c, 0xf2, 0xbd, 0x0b, 0x5b, 0xd7, 0xcc,
	0x64, 0x25, 0x4a, 0x89, 0xf4, 0x1e, 0x18, 0x41, 0xcc, 0x33, 0xe3, 0xb5, 0x1e, 0xf5, 0x34, 0x7c,
	0x9b, 0xfd, 0x7c, 0x4c, 0xe7, 0x97, 0x63, 0x1e, 0xc0, 0x7f, 0x76, 0x93, 0xa7, 0x17, 0x46, 0xb0,
	0x6e, 0x04, 0x43, 0x23, 0x68, 0x39, 0xba, 0x0b, 0x06, 0xc7, 0xa9, 0x68, 0x4a, 0x55, 0x2f, 0xbc,
	0x0d, 0xa3, 0x71, 0x34, 0x77, 0x68, 0x29, 0xba, 0x03, 0x06, 0xc6, 0x33, 0x2c, 0x33, 0xac, 0xbd,
	0xae, 0x4f, 0x82, 0x6e, 0x64, 0x3a, 0xf7, 0xda, 0x30, 0x2b, 0x8f, 0x1a, 0x33, 0xae, 0xa4, 0xd7,
	0xf3, 0x49, 0x40, 0x5a, 0x0f, 0x4b, 0xe9, 0x2b, 0x73, 0x19, 0xb3, 0xac, 0xe0, 0xa5, 0xb7, 0xe9,
	0x93, 0xa0, 0x1f, 0x6d, 0x72, 0xf9, 0x52, 0x43, 0x7d, 0x07, 0xd6, 0xa8, 0x79, 0x9c, 0x8a, 0x0c,
	0xbd, 0xbe, 0x4f, 0x82, 0x61, 0xd4, 0xd7, 0xc4, 0xa1, 0xc8, 0x56, 0xf1, 0x12, 0x96, 0xb3, 0x32,
	0x45, 0x6f, 0xe0, 0x93, 0xa0, 0x63, 0xad, 0x5f, 0x59, 0x8a, 0x1e, 0xd8, 0x57, 0x8c, 0xe7, 0x22,
	0x49, 0x16, 0x1e, 0xf8, 0x24, 0x18, 0x4d, 0x77, 0xc3, 0xe5, 0x63, 0x86, 0xbf, 0x75, 0x33, 0x7c,
	0xa3, 0x85, 0x91, 0x69, 0x9c, 0x59, 0xd2, 0x17, 0xd0, 0xab, 0xe6, 0xa2, 0x44, 0xe9, 0x39, 0xfe,
	0x7a, 0xe0, 0x4c, 0x1f, 0xdd, 0x54, 0x7d, 0xa2, 0x95, 0xc7, 0x4d, 0x91, 0x60, 0x1d, 0xb5, 0x65,
	0xf4, 0x19, 0x0c, 0x73, 0x2d, 0x8a, 0xa5, 0x62, 0xaa, 0x91, 0xde, 0xd0, 0x84, 0xb8, 0xb3, 0xb2,
	0x31, 0x16, 0xa7, 0x66, 0x33, 0x72, 0xf2, 0x15, 0xa0, 0x47, 0xe0, 0xe6, 0x4c, 0xaa, 0xb8, 0xa9,
	0x32, 0xa6, 0x30, 0xd6, 0x1f, 0x6f, 0xcb, 0x27, 0x81, 0x33, 0x1d, 0x87, 0x76, 0x0a, 0xc3, 0xe5,
	0x14, 0x86, 0x67, 0xcb, 0x29, 0x8c, 0x46, 0xba, 0xe6, 0xdc, 0x94, 0x1c, 0x31, 0x85, 0xe3, 0x4f,
	0xe0, 0x5c, 0x8b, 0x45, 0xef, 0x42, 0xaf, 0x34, 0xab, 0x76, 0xf2, 0x5a, 0x44, 0x9f, 0xc3, 0x86,
	0x5a, 0x54, 0x76, 0x50, 0x46, 0xd3, 0x87, 0x7f, 0xbd, 0xe5, 0xd9, 0xa2, 0xc2, 0xc8, 0x94, 0x4c,
	0x9e, 0x40, 0xd7, 0xf6, 0x6a, 0x00, 0xdd, 0xa2, 0x91, 0x3c, 0x75, 0xd7, 0xe8, 0x08, 0x20, 0x61,
	0xf2, 0x02, 0x55, 0xc2, 0xf2, 0xdc, 0x25, 0xb4, 0x0f, 0x1b, 0x4a, 0x34, 0xb5, 0xdb, 0x99, 0x3c,
	0x86, 0xc1, 0x95, 0x01, 0x05, 0xe8, 0x15, 0x22, 0xe1, 0x39, 0xba, 0x6b, 0x5a, 0x32, 0x17, 0x05,
	0x5a, 0xf1, 0xa5, 0xa8, 0x2f, 0xdc, 0xce, 0xf4, 0x5b, 0x07, 0x1c, 0x1d, 0xe0, 0xd4, 0xa6, 0xa1,
	0x07, 0xd0, 0x35, 0x59, 0xe8, 0xf8, 0x8f, 0x01, 0xcd, 0xff, 0x35, 0xde, 0xbe, 0x21, 0x3c, 0xfd,
	0x08, 0xff, 0x1b, 0xe2, 0x30, 0xe7, 0x58, 0xaa, 0x53, 0x55, 0x23, 0x2b, 0x78, 0x39, 0xfb, 0x67,
	0xc3, 0x80, 0x5c, 0x59, 0xea, 0x90, 0x58, 0xdf, 0xde, 0x72, 0x9f, 0xd0, 0x0f, 0x30, 0x6a, 0xc7,
	0xe2, 0xf6, 0xf9, 0xf6, 0x49, 0xd2, 0x33, 0x73, 0xf2, 0xf4, 0x47, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x5e, 0x63, 0xc3, 0x3c, 0xd3, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	Login(ctx context.Context, in *UserLoginRequest, opts ...grpc.CallOption) (*UserLoginResponse, error)
	LoginClientStreaming(ctx context.Context, opts ...grpc.CallOption) (UserService_LoginClientStreamingClient, error)
	LoginServerStreaming(ctx context.Context, in *UserLoginRequest, opts ...grpc.CallOption) (UserService_LoginServerStreamingClient, error)
	LoginStreaming(ctx context.Context, opts ...grpc.CallOption) (UserService_LoginStreamingClient, error)
}

type userServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserServiceClient(cc grpc.ClientConnInterface) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) Login(ctx context.Context, in *UserLoginRequest, opts ...grpc.CallOption) (*UserLoginResponse, error) {
	out := new(UserLoginResponse)
	err := c.cc.Invoke(ctx, "/services.UserService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) LoginClientStreaming(ctx context.Context, opts ...grpc.CallOption) (UserService_LoginClientStreamingClient, error) {
	stream, err := c.cc.NewStream(ctx, &_UserService_serviceDesc.Streams[0], "/services.UserService/LoginClientStreaming", opts...)
	if err != nil {
		return nil, err
	}
	x := &userServiceLoginClientStreamingClient{stream}
	return x, nil
}

type UserService_LoginClientStreamingClient interface {
	Send(*UserLoginRequest) error
	CloseAndRecv() (*UserLoginResponse, error)
	grpc.ClientStream
}

type userServiceLoginClientStreamingClient struct {
	grpc.ClientStream
}

func (x *userServiceLoginClientStreamingClient) Send(m *UserLoginRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *userServiceLoginClientStreamingClient) CloseAndRecv() (*UserLoginResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(UserLoginResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *userServiceClient) LoginServerStreaming(ctx context.Context, in *UserLoginRequest, opts ...grpc.CallOption) (UserService_LoginServerStreamingClient, error) {
	stream, err := c.cc.NewStream(ctx, &_UserService_serviceDesc.Streams[1], "/services.UserService/LoginServerStreaming", opts...)
	if err != nil {
		return nil, err
	}
	x := &userServiceLoginServerStreamingClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type UserService_LoginServerStreamingClient interface {
	Recv() (*UserLoginResponse, error)
	grpc.ClientStream
}

type userServiceLoginServerStreamingClient struct {
	grpc.ClientStream
}

func (x *userServiceLoginServerStreamingClient) Recv() (*UserLoginResponse, error) {
	m := new(UserLoginResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *userServiceClient) LoginStreaming(ctx context.Context, opts ...grpc.CallOption) (UserService_LoginStreamingClient, error) {
	stream, err := c.cc.NewStream(ctx, &_UserService_serviceDesc.Streams[2], "/services.UserService/LoginStreaming", opts...)
	if err != nil {
		return nil, err
	}
	x := &userServiceLoginStreamingClient{stream}
	return x, nil
}

type UserService_LoginStreamingClient interface {
	Send(*UserLoginRequest) error
	Recv() (*UserLoginResponse, error)
	grpc.ClientStream
}

type userServiceLoginStreamingClient struct {
	grpc.ClientStream
}

func (x *userServiceLoginStreamingClient) Send(m *UserLoginRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *userServiceLoginStreamingClient) Recv() (*UserLoginResponse, error) {
	m := new(UserLoginResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	Login(context.Context, *UserLoginRequest) (*UserLoginResponse, error)
	LoginClientStreaming(UserService_LoginClientStreamingServer) error
	LoginServerStreaming(*UserLoginRequest, UserService_LoginServerStreamingServer) error
	LoginStreaming(UserService_LoginStreamingServer) error
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) Login(ctx context.Context, req *UserLoginRequest) (*UserLoginResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login not implemented")
}
func (*UnimplementedUserServiceServer) LoginClientStreaming(srv UserService_LoginClientStreamingServer) error {
	return status.Errorf(codes.Unimplemented, "method LoginClientStreaming not implemented")
}
func (*UnimplementedUserServiceServer) LoginServerStreaming(req *UserLoginRequest, srv UserService_LoginServerStreamingServer) error {
	return status.Errorf(codes.Unimplemented, "method LoginServerStreaming not implemented")
}
func (*UnimplementedUserServiceServer) LoginStreaming(srv UserService_LoginStreamingServer) error {
	return status.Errorf(codes.Unimplemented, "method LoginStreaming not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserLoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/services.UserService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Login(ctx, req.(*UserLoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_LoginClientStreaming_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(UserServiceServer).LoginClientStreaming(&userServiceLoginClientStreamingServer{stream})
}

type UserService_LoginClientStreamingServer interface {
	SendAndClose(*UserLoginResponse) error
	Recv() (*UserLoginRequest, error)
	grpc.ServerStream
}

type userServiceLoginClientStreamingServer struct {
	grpc.ServerStream
}

func (x *userServiceLoginClientStreamingServer) SendAndClose(m *UserLoginResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *userServiceLoginClientStreamingServer) Recv() (*UserLoginRequest, error) {
	m := new(UserLoginRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _UserService_LoginServerStreaming_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(UserLoginRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(UserServiceServer).LoginServerStreaming(m, &userServiceLoginServerStreamingServer{stream})
}

type UserService_LoginServerStreamingServer interface {
	Send(*UserLoginResponse) error
	grpc.ServerStream
}

type userServiceLoginServerStreamingServer struct {
	grpc.ServerStream
}

func (x *userServiceLoginServerStreamingServer) Send(m *UserLoginResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _UserService_LoginStreaming_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(UserServiceServer).LoginStreaming(&userServiceLoginStreamingServer{stream})
}

type UserService_LoginStreamingServer interface {
	Send(*UserLoginResponse) error
	Recv() (*UserLoginRequest, error)
	grpc.ServerStream
}

type userServiceLoginStreamingServer struct {
	grpc.ServerStream
}

func (x *userServiceLoginStreamingServer) Send(m *UserLoginResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *userServiceLoginStreamingServer) Recv() (*UserLoginRequest, error) {
	m := new(UserLoginRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "services.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Login",
			Handler:    _UserService_Login_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "LoginClientStreaming",
			Handler:       _UserService_LoginClientStreaming_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "LoginServerStreaming",
			Handler:       _UserService_LoginServerStreaming_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "LoginStreaming",
			Handler:       _UserService_LoginStreaming_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "user.proto",
}
